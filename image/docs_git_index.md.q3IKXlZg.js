import{_ as s,D as n,c as p,b as r,w as t,a3 as c,a2 as d,j as a,a as e,o as i,I as l}from"./chunks/framework.CU_G9tbb.js";const h="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20aria-hidden='true'%20height='16'%20viewBox='0%200%2016%2016'%20version='1.1'%20width='16'%20data-view-component='true'%20class='octicon%20octicon-copy%20js-clipboard-copy-icon%20d-inline-block'%3e%3cpath%20fill='white'%20fill-rule='evenodd'%20d='M0%206.75C0%205.784.784%205%201.75%205h1.5a.75.75%200%20010%201.5h-1.5a.25.25%200%2000-.25.25v7.5c0%20.138.112.25.25.25h7.5a.25.25%200%2000.25-.25v-1.5a.75.75%200%20011.5%200v1.5A1.75%201.75%200%20019.25%2016h-7.5A1.75%201.75%200%20010%2014.25v-7.5z'%3e%3c/path%3e%3cpath%20fill='white'%20fill-rule='evenodd'%20d='M5%201.75C5%20.784%205.784%200%206.75%200h7.5C15.216%200%2016%20.784%2016%201.75v7.5A1.75%201.75%200%200114.25%2011h-7.5A1.75%201.75%200%20015%209.25v-7.5zm1.75-.25a.25.25%200%2000-.25.25v7.5c0%20.138.112.25.25.25h7.5a.25.25%200%2000.25-.25v-7.5a.25.25%200%2000-.25-.25h-7.5z'%3e%3c/path%3e%3c/svg%3e",g="/image/git1.DXGuiS2p.jpg",m="/image/git2.BbjA-x4t.jpg",w=JSON.parse('{"title":"Git","description":"","frontmatter":{},"headers":[],"relativePath":"docs/git/index.md","filePath":"docs/git/index.md","lastUpdated":null}'),u={name:"docs/git/index.md"},A=d('<h1 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#git-clone">git clone</a></li><li><a href="#git-status">git status</a></li><li><a href="#git-add">git add</a></li><li><a href="#git-commit">git commit</a></li><li><a href="#git-push">git push</a></li><li><a href="#git-pull">git pull</a></li><li><a href="#git-fetch">git fetch</a></li></ul></nav><p>如下圖所示依序點擊<code>Code &gt; </code></p><p>Git是一款版本控管工具其架構大致可分為遠端與本地端如下圖所示</p>',4),_=a("p",null,[e("在使用Git時我們可以自由編輯的區域叫做工作目錄也就是我們當前專案所處的資料夾， 當文件編輯完後需要做一次版本紀錄的話就將該版本所需要納入的文件用"),a("code",null,"git add"),e("加入暫存區內， 接著用"),a("code",null,"git commit"),e("將當前已加入暫存區的檔案提交為一個版本， 並將此版本納入本地版本庫(Local Repository)中， 如果遠端版本庫(Remote Repository)可以連線的話， 就可以用"),a("code",null,"git push"),e("將本地端所有尚未推送之版本紀錄推送到遠端的版本管理庫中，")],-1),f=d('<h1 id="常用指令" tabindex="-1">常用指令 <a class="header-anchor" href="#常用指令" aria-label="Permalink to &quot;常用指令&quot;">​</a></h1><h3 id="git-clone" tabindex="-1">git clone <a class="header-anchor" href="#git-clone" aria-label="Permalink to &quot;git clone&quot;">​</a></h3><p>將伺服器的版本庫複製回本地的作業環境中，以計中維護教學頁面為例。</p><p>如下圖所示依序點擊<code>Code &gt; </code><img src="'+h+'" alt="An image"></p><p><img src="'+g+'" alt="An image"> 並且在你想要存放的位置叫出cmd，輸入<code>git clone</code>後貼上剛剛複製的連結，按下enter後即可複製遠端的版本庫至本地端。 <img src="'+m+`" alt="An image"></p><h3 id="git-status" tabindex="-1">git status <a class="header-anchor" href="#git-status" aria-label="Permalink to &quot;git status&quot;">​</a></h3><pre><code>查看當前目錄下的git資訊
</code></pre><h3 id="git-add" tabindex="-1">git add <a class="header-anchor" href="#git-add" aria-label="Permalink to &quot;git add&quot;">​</a></h3><pre><code>將檔案加入版本控管追蹤
</code></pre><h3 id="git-commit" tabindex="-1">git commit <a class="header-anchor" href="#git-commit" aria-label="Permalink to &quot;git commit&quot;">​</a></h3><pre><code>提交一個新的版本
</code></pre><h3 id="git-push" tabindex="-1">git push <a class="header-anchor" href="#git-push" aria-label="Permalink to &quot;git push&quot;">​</a></h3><pre><code>將本地端的版本更新到遠端伺服器
</code></pre><h3 id="git-pull" tabindex="-1">git pull <a class="header-anchor" href="#git-pull" aria-label="Permalink to &quot;git pull&quot;">​</a></h3><pre><code>將遠端伺服器的版本更新到本地作業環境
</code></pre><h3 id="git-fetch" tabindex="-1">git fetch <a class="header-anchor" href="#git-fetch" aria-label="Permalink to &quot;git fetch&quot;">​</a></h3><pre><code>獲取伺服器端的版本資訊但不進行更新
</code></pre>`,17);function E(b,D,v,x,B,C){const o=n("Mermaid");return i(),p("div",null,[A,(i(),r(c,null,{default:t(()=>[l(o,{id:"mermaid-12",class:"mermaid my-class",graph:"graph%20LR%0A%20%20%20%20subgraph%20remote%0A%20%20%20%20repo%5B%22%E9%81%A0%E7%AB%AFRepository%22%5D%0A%20%20%20%20end%0A%20%20%20%20subgraph%20local%0A%20%20%20%20wd%5B%22%E5%B7%A5%E4%BD%9C%E7%9B%AE%E9%8C%84%22%5D%20--%22git%20add%22--%3E%20temp%5B%22%E6%9A%AB%E5%AD%98%E5%8D%80%22%5D%0A%20%20%20%20temp--%22git%20commit%22--%3ErepoL%5B%22%E6%9C%AC%E5%9C%B0Repository%22%5D%0A%20%20%20%20repoL%3D%3D%22git%20push%22%3D%3D%3Erepo%0A%20%20%20%20repo%3D%3D%22git%20fetch%22%3D%3D%3ErepoL%0A%20%20%20%20end%0A%0A"})]),fallback:t(()=>[e(" Loading... ")]),_:1})),_,(i(),r(c,null,{default:t(()=>[l(o,{id:"mermaid-16",class:"mermaid my-class",graph:"sequenceDiagram%0A%20%20%20%20participant%20wd%20as%20%E5%B7%A5%E4%BD%9C%E7%9B%AE%E9%8C%84%0A%20%20%20%20participant%20temp%20as%20%E6%9A%AB%E5%AD%98%E5%8D%80%0A%20%20%20%20participant%20repoLocal%20as%20Local%20Repository%0A%20%20%20%20participant%20repoRemote%20as%20Remote%20Repository%0A%20%20%20%20rect%20rgb(0%2C%200%2C%200)%0A%20%20%20%20wd-%3E%3Etemp%3Agit%20add%0A%20%20%20%20temp-%3E%3ErepoLocal%3Agit%20commit%0A%20%20%20%20repoLocal-%3E%3ErepoRemote%3Agit%20push%0A%20%20%20%20repoRemote%20-%3E%3E%20repoLocal%3Agit%20fetch%0A%20%20%20%20repoLocal-%3E%3Ewd%3Agit%20checkout%0A%20%20%20%20repoLocal-%3E%3Ewd%3Agit%20merge%0A%20%20%20%20repoRemote%20-%3E%3E%20wd%3Agit%20pull%0A%20%20%20%20end%0A%0A"})]),fallback:t(()=>[e(" Loading... ")]),_:1})),f])}const k=s(u,[["render",E]]);export{w as __pageData,k as default};
